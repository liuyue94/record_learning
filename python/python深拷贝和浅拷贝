python深拷贝和浅拷贝


参考链接：

https://www.codersrc.com/archives/5492.html
https://aitechtogether.com/python/70617.html

Python 普通的变量赋值——平常使用的变量赋值就是浅拷贝，即两个变量共享同一个内存块，相同的内存地址，一旦值发生改变，另外一个变量的值也会跟随着一起变化
注意：常规的变量赋值共享一个内存块，内存地址相同，一旦值发生改变，共享同一个内存地址的所有变量值都会发生改变，可以直接通过内置函数 id 对比下内存地址即可

浅拷贝，即两个变量共享同一个内存块，相同的内存地址，一旦值发生改变，另外一个变量的值也会跟随着一起变化



浅拷贝只复制某个对象的引用，而不复制对象本身，新旧对象还是共享同一块内存。

深拷贝会创造一个一模一样的对象，新对象和原对象不共享内存，修改新对象不会改变原对对象



copy模块：

copy.copy – 浅拷贝，重新分配内存，只拷贝父对象，不会拷贝对象的内部的子对象；

copy.deepcopy – 深拷贝，重新分配内存，拷贝对象及其所有子对象；



如果列表或者字典没有包含子列表或者子字典的话，使用深拷贝或者浅拷贝效果都有一样；

如果列表或者字典中存在子类的时候，只有深拷贝才会为所有的子类也重新分配内存，而浅拷贝只负责父对象，不考虑子对象！！

