34. 在排序数组中查找元素的第一个和最后一个位置


class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        ret = []
        
        left = 0
        right = len(nums)

        while left<right:
            mid = left+(right-left)//2

            if nums[mid]==target:
                #这里不能return
                #左边界
                right = mid
            elif nums[mid]<target:
                left =mid+1
            elif nums[mid]>target:
                right = mid
        
        if left<0 or left>=len(nums) or nums[left]!=target:
            ret.append(-1)
        else:
            ret.append(left)


        left1 = 0
        right1 = len(nums)

        while left1<right1:
            mid1 = left1+(right1-left1)//2

            if nums[mid1]==target:
                left1 = mid1+1
            elif nums[mid1]<target:
                left1 =mid1+1
            elif nums[mid1]>target:
                right1 = mid1

        if left1-1<0 or left1-1>=len(nums) or nums[left1-1]!=target:
            ret.append(-1)
        else:
            ret.append(left1-1)

        return ret

