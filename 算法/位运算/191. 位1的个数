191. 位1的个数


class Solution:
    def hammingWeight(self, n: int) -> int:
        #方法1——循环检查二进制位，与1与一下
        ret = 0
        # & 1结果是1
        #输入必须是长度为 32 的 二进制串
        for i in range(32):
            #如果结果是1，说明最后一位是1，（1的二进制0001，前面都是0，与的最后结果也是0）
            if (n>>i)&1==1:
                ret = ret+1
        return ret



class Solution:
    def hammingWeight(self, n: int) -> int:
        #n & (n−1)，其运算结果恰为把 nnn 的二进制位中的最低位的 111 变为 000 之后的结果
        ret = 0
        while n:
            n = n&(n-1)
            ret = ret+1

        return ret
