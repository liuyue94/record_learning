136. 只出现一次的数字





class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        #空间复杂度是 O(n)， 时间复杂度0（n）
        h = {}

        for i in nums:
            if i in h.keys():
                h[i] = h[i]+1
            else:
                h[i] = 1

        print(h)

        for key,value in h.items():
            if value==1:
                return key

        


异或

相同的数字异或为0

x ^ x =0


class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        ans = nums[0]

        for i in range (1,len(nums)):
            ans = ans ^ nums[i]

        return ans


        
